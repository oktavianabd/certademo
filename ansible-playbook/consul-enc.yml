---
- name: consul encryption on existing cluster
  hosts:
    - certa-orc

  tasks:
    - name: 1.1 Ensure encryption key
      become: true
      ansible.builtin.lineinfile:
        path: /etc/consul.d/consul.hcl
        regexp: "^encrypt "
        line: encrypt = "zBeJQxFgGhl2EkHtEFbbsGGjg9IzDMbWWpWO3D5tkC0="
    - name: 1.2 Ensure encryption verification disabled
      become: true
      ansible.builtin.lineinfile:
        path: /etc/consul.d/consul.hcl
        regexp: "^{{item.key}} "
        line: "{{item.key}} = {{item.value}}"
      with_items:
        - { key: "encrypt_verify_incoming", value: "false" }
        - { key: "encrypt_verify_outgoing", value: "false" }
    - name: 1.3 restart consul service
      become: true
      ansible.builtin.systemd:
        name: consul
        state: restarted
    - name: Pause for 30s
      ansible.builtin.pause:
        seconds: 30

    #### verify outgoing true
    - name: 2.1 Ensure encryption verify outgoing true
      become: true
      ansible.builtin.lineinfile:
        path: /etc/consul.d/consul.hcl
        regexp: "^{{item.key}} "
        line: "{{item.key}} = {{item.value}}"
      with_items:
        - { key: "encrypt_verify_incoming", value: "false" }
        - { key: "encrypt_verify_outgoing", value: "true" }
    - name: 2.2 restart consul service
      become: true
      ansible.builtin.systemd:
        name: consul
        state: restarted
    - name: Pause for 30s
      ansible.builtin.pause:
        seconds: 30

    #### both verify are true
    - name: 3.1 Ensure both encryption verifications true
      become: true
      ansible.builtin.lineinfile:
        path: /etc/consul.d/consul.hcl
        regexp: "^{{item.key}} "
        line: "{{item.key}} = {{item.value}}"
      with_items:
        - { key: "encrypt_verify_incoming", value: "true" }
        - { key: "encrypt_verify_outgoing", value: "true" }
    - name: 3.2 restart consul service
      become: true
      ansible.builtin.systemd:
        name: consul
        state: restarted

